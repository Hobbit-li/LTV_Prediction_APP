#####  Need be modified usually
###  The feature cycle is static
###  The prediction(LTV) cycle is dynamic and adjusted
###  The Objective: predict how long can it be returned
#  If local file:
#  Set the local file path
path_ref: "/kaggle/input/fat-2024-7-8/20250703_113205_35764_2gnin.csv"   # historical data path
path_pre: "/kaggle/input/fat-2024-09/20250703_113345_36014_2gnin.csv"    # prediction target data

# LTV prediction cycles -- Life Month
days_list: [300]
# days_list_existed: [7, 30, 60, 90, 120]
days_list_existed: [300]
# Total cost for the cohort to be predicted
cost: 1234991.68


# Weight quantiles and corresponding weights
percentiles: [0.5, 0.8, 0.9, 0.95, 0.995, 1.0]
base_weights: [1, 5, 10, 50, 500, 1000]

# Number of top players (used for training weight adjustments)
top_num: 200



#####  un-modified 
# Payer tag columns (used to drop features for non-paying users)
# list
payer_tag:
  - d0_usd
  - pay_in3days
  - pay_in7days
  - pay_in30days
  - pay_in2month
  - pay_in3month
  - pay_in4month
  - pay_in5months
  - avg_usd3days
  - avg_usd7days
  - avg_usd30days
  - avg_usd2month
  - avg_usd3month
  - avg_usd4month
  - avg_usd5months

# Categorical features
cat_features: [countrytype, os, source, install_device, social_type]
# Numerical features
num_features: 
    - first_duration
    - d0_duration
    - active_in3days
    - avg_dur3days
    - d0_usd
    - pay_in3days
    - avg_usd3days
    - active_in7days
    - avg_dur7days
    - pay_in7days
    - avg_usd7days
    - active_in30days
    - avg_dur30days
    - pay_in30days
    - avg_usd30days
    - active_in2month
    - avg_dur2month
    - pay_in2month
    - avg_usd2month
    - active_in3month
    - avg_dur3month
    - pay_in3month
    - avg_usd3month
    - active_in4month
    - avg_dur4month
    - pay_in4month
    - avg_usd4month
    - active_in5months
    - avg_dur5months
    - pay_in5months
    - avg_usd5months

# Target columns (multi-output)
target_col: 
  - LTV_7day
  - LTV_30day
  - LTV_60day
  - LTV_90day
  - LTV_120day
  - LTV_240day
  - LTV_300day

# User ID column
id_col: user_id


##### model parameters
# classification params
params_clf:
  objective: binary
  metric: binary_logloss
  boosting_type: gbdt
  learning_rate: 0.05
  scale_pos_weight: 90
  num_leaves: 31
  verbose: -1

# regression params
params_reg:
  objective: regression        # Objective function for regression tasks (predict continuous values)
  metric:                       # Evaluation metric, using RMSE (Root Mean Squared Error)
    - rmse
  boosting_type: gbdt          # Boosting method, GBDT = Gradient Boosting Decision Tree
  learning_rate: 0.05          # Learning rate, scales the contribution of each iteration; smaller is more stable but needs more iterations
  max_depth: 12                # Maximum depth of the tree, controls model complexity and prevents overfitting
  num_leaves: 4096             # Maximum number of leaves per tree (usually <= 2^max_depth)
  feature_fraction: 0.70       # Fraction of features used for training each tree (feature sampling to prevent overfitting)
  subsample: 0.75              # Fraction of data used for each iteration (bagging, sample subsampling)
  seed: 114                   # Random seed for reproducibility
  num_iterations: 10000        # Maximum number of boosting iterations (max trees)
  nthread: -1                 # Use all available CPU cores (automatic thread setting)
  verbose: -1                 # Output level, -1 means no training logs
