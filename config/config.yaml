#####  Need be modified usually
###  The feature cycle is static
###  The prediction(LTV) cycle is dynamic and adjusted
###  The Objective: predict how long can it be returned
#  If local file:
#  Set the local file path
path_ref: "/kaggle/input/fat-2024-7-8/20250703_113205_35764_2gnin.csv"   # historical data path
path_pre: "/kaggle/input/fat-2024-09/20250703_113345_36014_2gnin.csv"    # prediction target data

# LTV prediction cycles -- Life Month
# m0-m5
ref_month: m5 
# The month cycle of the follow-up forecast
# pre_month: 15

# Total cost for the cohort to be predicted
cost: 1234991.68


# Weight quantiles and corresponding weights
percentiles: [0.5, 0.8, 0.9, 0.95, 0.995, 1.0]
base_weights: [1, 5, 10, 50, 500, 1000]

# Number of top players (used for training weight adjustments)
top_num: 200



#####  un-modified 
# Payer tag columns (used to drop features for non-paying users)
# list
payer_tag:
  - ltv_m0
  - ltv_m1
  - ltv_m2
  - ltv_m3
  - ltv_m4
  - ltv_m5
  

# Categorical features
cat_features: [countrytype, os, source, install_device, social_type]
# Numerical features
num_features:
  - first_duration
  - d0_duration
  - active_d0_cnt
  - active_d3_cnt
  - active_d7_cnt
  - active_m0_cnt
  - active_m1_cnt
  - active_m2_cnt
  - active_m3_cnt
  - active_m4_cnt
  - active_m5_cnt
  - avg_dur_d3
  - avg_dur_d7
  - avg_dur_m0
  - avg_dur_m1
  - avg_dur_m2
  - avg_dur_m3
  - avg_dur_m4
  - avg_dur_m5
  - pay_d0_cnt
  - pay_d3_cnt
  - pay_d7_cnt
  - pay_m0_cnt
  - pay_m1_cnt
  - pay_m2_cnt
  - pay_m3_cnt
  - pay_m4_cnt
  - pay_m5_cnt
  - ltv_d0
  - ltv_d3
  - ltv_d7
  - ltv_m0
  - ltv_m1
  - ltv_m2
  - ltv_m3
  - ltv_m4
  - ltv_m5
  - ltv_m6
  - ltv_m7
  - ltv_m8
  - ltv_m9
  - ltv_m10
  - ltv_m11
  - ltv_m12
  - ltv_m13
  - ltv_m14
  - ltv_m15
  - ltv_m16
  - ltv_m17
  - ltv_m18
  - ltv_m19
  - ltv_m20
  - ltv_m21
  - ltv_m22
  - ltv_m23



num_features_map:
  m0:
    - first_duration
    - d0_duration
    - active_d0_cnt
    - active_d3_cnt
    - active_d7_cnt
    - avg_dur_d3
    - avg_dur_d7
    - pay_d0_cnt
    - pay_d3_cnt
    - pay_d7_cnt
    - ltv_d0
    - ltv_d3
    - ltv_d7
    - active_m0_cnt
    - avg_dur_m0
    - pay_m0_cnt
    - ltv_m0
  m1:
    - first_duration
    - d0_duration
    - active_d0_cnt
    - active_d3_cnt
    - active_d7_cnt
    - avg_dur_d3
    - avg_dur_d7
    - pay_d0_cnt
    - pay_d3_cnt
    - pay_d7_cnt
    - ltv_d0
    - ltv_d3
    - ltv_d7
    - active_m0_cnt
    - avg_dur_m0
    - pay_m0_cnt
    - ltv_m0
    - active_m1_cnt
    - avg_dur_m1
    - pay_m1_cnt
    - ltv_m1
  m2:
    - first_duration
    - d0_duration
    - active_d0_cnt
    - active_d3_cnt
    - active_d7_cnt
    - avg_dur_d3
    - avg_dur_d7
    - pay_d0_cnt
    - pay_d3_cnt
    - pay_d7_cnt
    - ltv_d0
    - ltv_d3
    - ltv_d7
    - active_m0_cnt
    - avg_dur_m0
    - pay_m0_cnt
    - ltv_m0
    - active_m1_cnt
    - avg_dur_m1
    - pay_m1_cnt
    - ltv_m1
    - active_m2_cnt
    - avg_dur_m2
    - pay_m2_cnt
    - ltv_m2
  m3:
    - first_duration
    - d0_duration
    - active_d0_cnt
    - active_d3_cnt
    - active_d7_cnt
    - avg_dur_d3
    - avg_dur_d7
    - pay_d0_cnt
    - pay_d3_cnt
    - pay_d7_cnt
    - ltv_d0
    - ltv_d3
    - ltv_d7
    - active_m0_cnt
    - avg_dur_m0
    - pay_m0_cnt
    - ltv_m0
    - active_m1_cnt
    - avg_dur_m1
    - pay_m1_cnt
    - ltv_m1
    - active_m2_cnt
    - avg_dur_m2
    - pay_m2_cnt
    - ltv_m2
    - active_m3_cnt
    - avg_dur_m3
    - pay_m3_cnt
    - ltv_m3
  m4:
    - first_duration
    - d0_duration
    - active_d0_cnt
    - active_d3_cnt
    - active_d7_cnt
    - avg_dur_d3
    - avg_dur_d7
    - pay_d0_cnt
    - pay_d3_cnt
    - pay_d7_cnt
    - ltv_d0
    - ltv_d3
    - ltv_d7
    - active_m0_cnt
    - avg_dur_m0
    - pay_m0_cnt
    - ltv_m0
    - active_m1_cnt
    - avg_dur_m1
    - pay_m1_cnt
    - ltv_m1
    - active_m2_cnt
    - avg_dur_m2
    - pay_m2_cnt
    - ltv_m2
    - active_m3_cnt
    - avg_dur_m3
    - pay_m3_cnt
    - ltv_m3
    - active_m4_cnt
    - avg_dur_m4
    - pay_m4_cnt
    - ltv_m4
  m5:
    - first_duration
    - d0_duration
    - active_d0_cnt
    - active_d3_cnt
    - active_d7_cnt
    - avg_dur_d3
    - avg_dur_d7
    - pay_d0_cnt
    - pay_d3_cnt
    - pay_d7_cnt
    - ltv_d0
    - ltv_d3
    - ltv_d7
    - active_m0_cnt
    - avg_dur_m0
    - pay_m0_cnt
    - ltv_m0
    - active_m1_cnt
    - avg_dur_m1
    - pay_m1_cnt
    - ltv_m1
    - active_m2_cnt
    - avg_dur_m2
    - pay_m2_cnt
    - ltv_m2
    - active_m3_cnt
    - avg_dur_m3
    - pay_m3_cnt
    - ltv_m3
    - active_m4_cnt
    - avg_dur_m4
    - pay_m4_cnt
    - ltv_m4
    - active_m5_cnt
    - avg_dur_m5
    - pay_m5_cnt
    - ltv_m5





# Target columns (multi-output)
target_col_map:
  m0:
    - ltv_m1
    - ltv_m2
    - ltv_m3
    - ltv_m4
    - ltv_m5
    - ltv_m6
    - ltv_m7
    - ltv_m8
    - ltv_m9
    - ltv_m10
    - ltv_m11
    - ltv_m12
    - ltv_m13
    - ltv_m14
    - ltv_m15
    - ltv_m16
    - ltv_m17
    - ltv_m18
    - ltv_m19
    - ltv_m20
    - ltv_m21
    - ltv_m22
    - ltv_m23
  m1:
    - ltv_m2
    - ltv_m3
    - ltv_m4
    - ltv_m5
    - ltv_m6
    - ltv_m7
    - ltv_m8
    - ltv_m9
    - ltv_m10
    - ltv_m11
    - ltv_m12
    - ltv_m13
    - ltv_m14
    - ltv_m15
    - ltv_m16
    - ltv_m17
    - ltv_m18
    - ltv_m19
    - ltv_m20
    - ltv_m21
    - ltv_m22
    - ltv_m23
  m2:
    - ltv_m3
    - ltv_m4
    - ltv_m5
    - ltv_m6
    - ltv_m7
    - ltv_m8
    - ltv_m9
    - ltv_m10
    - ltv_m11
    - ltv_m12
    - ltv_m13
    - ltv_m14
    - ltv_m15
    - ltv_m16
    - ltv_m17
    - ltv_m18
    - ltv_m19
    - ltv_m20
    - ltv_m21
    - ltv_m22
    - ltv_m23
  m3:
    - ltv_m4
    - ltv_m5
    - ltv_m6
    - ltv_m7
    - ltv_m8
    - ltv_m9
    - ltv_m10
    - ltv_m11
    - ltv_m12
    - ltv_m13
    - ltv_m14
    - ltv_m15
    - ltv_m16
    - ltv_m17
    - ltv_m18
    - ltv_m19
    - ltv_m20
    - ltv_m21
    - ltv_m22
    - ltv_m23
  m4:
    - ltv_m5
    - ltv_m6
    - ltv_m7
    - ltv_m8
    - ltv_m9
    - ltv_m10
    - ltv_m11
    - ltv_m12
    - ltv_m13
    - ltv_m14
    - ltv_m15
    - ltv_m16
    - ltv_m17
    - ltv_m18
    - ltv_m19
    - ltv_m20
    - ltv_m21
    - ltv_m22
    - ltv_m23
  m5:
    - ltv_m6
    - ltv_m7
    - ltv_m8
    - ltv_m9
    - ltv_m10
    - ltv_m11
    - ltv_m12
    - ltv_m13
    - ltv_m14
    - ltv_m15
    - ltv_m16
    - ltv_m17
    - ltv_m18
    - ltv_m19
    - ltv_m20
    - ltv_m21
    - ltv_m22
    - ltv_m23

# User ID column
id_col: user_id


##### model parameters
# classification params
params_clf:
  objective: binary
  metric: binary_logloss
  boosting_type: gbdt
  learning_rate: 0.05
  scale_pos_weight: 90
  num_leaves: 31
  verbose: -1

# regression params
params_reg:
  objective: regression        # Objective function for regression tasks (predict continuous values)
  metric:                       # Evaluation metric, using RMSE (Root Mean Squared Error)
    - rmse
  boosting_type: gbdt          # Boosting method, GBDT = Gradient Boosting Decision Tree
  learning_rate: 0.05          # Learning rate, scales the contribution of each iteration; smaller is more stable but needs more iterations
  max_depth: 12                # Maximum depth of the tree, controls model complexity and prevents overfitting
  num_leaves: 4096             # Maximum number of leaves per tree (usually <= 2^max_depth)
  feature_fraction: 0.70       # Fraction of features used for training each tree (feature sampling to prevent overfitting)
  subsample: 0.75              # Fraction of data used for each iteration (bagging, sample subsampling)
  seed: 114                   # Random seed for reproducibility
  num_iterations: 10000        # Maximum number of boosting iterations (max trees)
  nthread: -1                 # Use all available CPU cores (automatic thread setting)
  verbose: -1                 # Output level, -1 means no training logs
